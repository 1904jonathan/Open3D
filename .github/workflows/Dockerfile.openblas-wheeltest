# Dockerfiel to *test* OpenBLAS wheel.

# FROM must be called before other ARGS except for ARG BASE_IMAGE
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

# For miniconda and the rest of this Dockerfile
SHELL ["/bin/bash", "-c"]

# Required build args, should be specified in docker_build.sh
ARG PYTHON_VERSION
RUN if [ -z "${PYTHON_VERSION}"       ]; then echo "Error: ARG PYTHON_VERSION       not specified."; exit 1; fi

# Prevent interactive inputs when installing packages
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Los_Angeles
ENV SUDO=command

# Minimal dependencies
# wget    : for downloading
# libgl1  : available on Ubuntu ARM desktop by default
# libgomp1: available on Ubuntu ARM desktop by default
RUN apt-get update && apt-get install -y \
    wget \
    libgl1 \
    libgomp1 \
 && rm -rf /var/lib/apt/lists/*

# Install Pyenv
# Conda is not reliable on Linux ARM64.
RUN apt-get update -y && apt-get install -y \
    make \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    wget \
    curl \
    llvm \
    libncurses5-dev \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libffi-dev \
    liblzma-dev \
    python-openssl \
    git \
 && rm -rf /var/lib/apt/lists/*
RUN git clone --depth=1 git://github.com/yyuu/pyenv.git /root/.pyenv
ENV PYENV_ROOT="/root/.pyenv"
ENV PATH="${PYENV_ROOT}/bin:${PYENV_ROOT}/shims:${PATH}"
RUN git clone https://github.com/momo-lab/pyenv-install-latest.git "$(pyenv root)"/plugins/pyenv-install-latest

# Activate Pyenv
RUN pyenv install-latest ${PYTHON_VERSION}
RUN pyenv global $(pyenv install-latest --print ${PYTHON_VERSION})

# Open3D repo
# Always keep /root/Open3D as the WORKDIR
COPY *.whl /

# Open3D Python dependencies
RUN pip install /*.whl

# Run test
RUN python -c "import open3d.core as o3c; print(o3c.Tensor.ones((2, 2)) @ o3c.Tensor.ones((2, 2)))"

RUN echo "Docker build done."
