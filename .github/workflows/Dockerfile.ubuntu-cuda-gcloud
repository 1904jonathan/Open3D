# FROM must be called before other ARGS except for ARG BASE_IMAGE
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

# Miniconda requires bash as the default shell.
SHELL ["/bin/bash", "-c"]

# Customizable build arguments from cuda.yml
ARG DEVELOPER_BUILD
ARG CCACHE_TAR_NAME
ARG CMAKE_VERSION
ARG CCACHE_VERSION
ARG PYTHON_VERSION
RUN if [[ -z "${DEVELOPER_BUILD}" ]]; then echo "ARG DEVELOPER_BUILD not provided"; exit 1; fi
RUN if [[ -z "${CCACHE_TAR_NAME}" ]]; then echo "ARG CCACHE_TAR_NAME not provided"; exit 1; fi
RUN if [[ -z "${CMAKE_VERSION}"   ]]; then echo "ARG CMAKE_VERSION   not provided"; exit 1; fi
RUN if [[ -z "${CCACHE_VERSION}"  ]]; then echo "ARG CCACHE_VERSION  not provided"; exit 1; fi
RUN if [[ -z "${PYTHON_VERSION}"  ]]; then echo "ARG PYTHON_VERSION  not provided"; exit 1; fi

# Forward all ARG to ENV
# ci_utils.sh requires these environment variables
ENV DEVELOPER_BUILD=${DEVELOPER_BUILD}
ENV CCACHE_TAR_NAME=${CCACHE_TAR_NAME}
ENV CMAKE_VERSION=${CMAKE_VERSION}
ARG CCACHE_VERSION=${CCACHE_VERSION}
ENV PYTHON_VERSION=${PYTHON_VERSION}

# Prevent interactive inputs when installing packages
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Los_Angeles
ENV SUDO=command

WORKDIR /
RUN echo "Hello world" > hello.txt
RUN echo "Docker build done."
