# Minium test for Open3D with OpenBLAS/LAPACK on both x86_64 and aarch64.
# This test is intentionally kept minimal and self-contained.

name: Ubuntu OpenBLAS CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

env:
  GCE_CLI_GHA_VERSION: '302.0.0'      # Fixed to avoid dependency on API changes

jobs:
  openblas_x86_64:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - name: Cancel outdated
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Maximize build space
        run: |
          source util/ci_utils.sh
          maximize_ubuntu_github_actions_build_space

      - name: Docker build
        run: |
          docker build -t open3d-openblas-ci:latest -f .github/workflows/Dockerfile.openblas .

      - name: C++ tests
        run: |
          docker run --rm open3d-openblas-ci:latest build/bin/tests

      - name: Python tests
        run: |
          docker run --rm open3d-openblas-ci:latest \
            pytest python/test/ --ignore python/test/ml_ops/ --ignore python/test/t/io/test_realsense.py

  openblas_arm64:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - name: Cancel outdated
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Maximize build space
        run: |
          source util/ci_utils.sh
          maximize_ubuntu_github_actions_build_space

      - name: Setup Docker with QEMU
        run: |
          sudo apt-get --yes install qemu binfmt-support qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Docker build (open3d-arm64-ci:latest)
        run: |
          docker build -t open3d-arm64-ci:latest -f .github/workflows/Dockerfile.arm64 .

      - name: C++ tests
        run: |
          docker run --rm open3d-arm64-ci:latest build/bin/tests \
            --gtest_filter="-*RGBDImage.CreateFromNYUFormat*"

      - name: Python tests
        run: |
          docker run --rm open3d-arm64-ci:latest \
            pytest python/test/ --ignore python/test/ml_ops/ --ignore python/test/t/io/test_realsense.py

      # https://stackoverflow.com/a/34093828/1255535
      - name: Copy ccache out from the container
        run: |
          docker run --rm --entrypoint cat open3d-arm64-ci:latest /open3d-arm64-ci-ccache.tar.gz > ${GITHUB_WORKSPACE}/open3d-arm64-ci-ccache.tar.gz

      - name: GCloud CLI setup
        uses: google-github-actions/setup-gcloud@master
        with:
          version: ${{ env.GCE_CLI_GHA_VERSION }}
          service_account_key: ${{ secrets.GCE_SA_KEY_DOCS_CI }}
          project_id: ${{ secrets.GCE_DOCS_PROJECT }}
          export_default_credentials: true

      - name: Upload ccache to GCS
        run: |
          gsutil cp ${GITHUB_WORKSPACE}/open3d-arm64-ci-ccache.tar.gz gs://open3d-ci-cache/ || true
