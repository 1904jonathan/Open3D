name: Ubuntu CUDA CI

on:
  workflow_dispatch:
    inputs:
      developer_build:
        description: 'Set to OFF for Release wheels'
        required: false
        default: 'ON'
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  build-wheel:
    name: Build wheel
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.6, 3.7, 3.8, 3.9]
        is_master:
          - ${{ github.ref == 'refs/heads/master' }}
        exclude:
          - is_master: false
            python_version: 3.7
          - is_master: false
            python_version: 3.8
          - is_master: false
            python_version: 3.9
    env:
      # Environment variables are used as Docker build args.
      # - Keep the default values consistent with Dockerfile.cuda
      # - Keep the usage orders consistent.
      BASE_IMAGE: nvidia/cuda:11.0.3-cudnn8-devel-ubuntu18.04
      DEVELOPER_BUILD: ${{ github.event.inputs.developer_build || 'ON' }}
      BUILD_COMMON_CUDA_ARCHS: ${{ matrix.is_master && 'ON' || 'OFF' }}
      CCACHE_TAR_NAME: open3d-ubuntu-1804-cuda-ci-ccache
      CMAKE_VERSION: cmake-3.19.7-Linux-x86_64
      CCACHE_VERSION: 4.3
      PYTHON_VERSION: ${{ matrix.python_version }}
    steps:
      - name: Print environment
        run: |
          echo "BASE_IMAGE=${{ env.BASE_IMAGE }}"
          echo "DEVELOPER_BUILD=${{ env.DEVELOPER_BUILD }}"
          echo "BUILD_COMMON_CUDA_ARCHS=${{ env.BUILD_COMMON_CUDA_ARCHS }}"
          echo "CCACHE_TAR_NAME=${{ env.CCACHE_TAR_NAME }}"
          echo "CMAKE_VERSION=${{ env.CMAKE_VERSION }}"
          echo "CCACHE_VERSION=${{ env.CCACHE_VERSION }}"
          echo "PYTHON_VERSION=${{ env.PYTHON_VERSION }}"
