name: Ubuntu CI

on:
  push:
    branches:
      - master
      - ssheorey/build-wheel
  pull_request:
    types: [opened, reopened, synchronize]  # Rebuild on new pushes to PR

jobs:
  ubuntu:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        SHARED: [ON, OFF]
    env:
      SHARED: ${{ matrix.SHARED }}
      BUILD_ML_OPS: ${{ env.SHARED }}
      BUILD_TENSORFLOW_OPS: ${{ env.BUILD_ML_OPS }}
      BUILD_PYTORCH_OPS: ${{ env.BUILD_ML_OPS }}
      BUILD_CUDA_MODULE: OFF
      BUILD_RPC_INTERFACE: ON
      NPROC: 2
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup cache
        uses: actions/cache@v2
        with:
          # Ref: https://github.com/apache/incubator-mxnet/pull/18459/files
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          # Restore any ccache cache entry, if none for
          # ${{ runner.os }}-ccache-${{ github.sha }} exists.
          # Common prefix will be used so that ccache can be used across commits.
          restore-keys: |
            ${{ runner.os }}-ccache
      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.5
      # Pre-installed 18.04 packages: https://git.io/JfHmW
      - name: Install dependencies
        run: |
          ./util/install_deps_ubuntu.sh assume-yes
          sudo apt-get --yes install ccache
          ccache -M 2G  # GitHub's total cache limit is 5GB for all OSes.
      - name: Config and build
        run: |
          PATH=/usr/lib/ccache:$PATH
          ccache -s
          ./util/run_ci.sh
          ccache -s

  build-ubuntu-wheel:
    name: Make Python package
    runs-on: Ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python_version: [3.5, 3.6, 3.7, 3.8]
    env:
      SHARED: OFF
      BUILD_TENSORFLOW_OPS: ON
      BUILD_PYTORCH_OPS: ON
      BUILD_CUDA_MODULE: ON
      BUILD_RPC_INTERFACE: ON
      NPROC: 2
      BUILD_WHEEL_ONLY: ON
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup cache
        uses: actions/cache@v2
        with:
          # Ref: https://github.com/apache/incubator-mxnet/pull/18459/files
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          # Restore any ccache cache entry, if none for
          # ${{ runner.os }}-ccache-${{ github.sha }} exists.
          # Common prefix will be used so that ccache can be used across commits.
          restore-keys: |
            ${{ runner.os }}-ccache
      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
      # Pre-installed 18.04 packages: https://git.io/JfHmW
      - name: Install dependencies
        run: |
          ./util/install_deps_ubuntu.sh assume-yes
          sudo apt-get --yes install ccache
          ccache -M 2G  # GitHub's total cache limit is 5GB for all OSes.

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Config and build wheel
        run: |
          PATH=/usr/lib/ccache:$PATH
          ccache -s
          ./util/run_ci.sh
          ccache -s
          echo "::set-env name=PIP_PKG_NAME::$(basename build/lib/python_package/pip_package/open3d*.whl)"

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PIP_PKG_NAME }}
          path: build/lib/python_package/pip_package/${{ env.PIP_PKG_NAME }}
          if-no-files-found: error
