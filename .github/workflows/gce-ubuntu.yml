name: Google Cloud Ubuntu GPU CI

on:
  workflow_dispatch:
    branches:
      - master
      - ssheorey/gce-gpu-ci
  push:
    branches:
      - master
      - ssheorey/gce-gpu-ci
  pull_request:
    types: [opened, reopened, synchronize]    # Rebuild on new pushes to PR

env:
  NPROC: 8                      # {2,4,8,16,32,64,96}
  GCE_PROJECT: ${{ secrets.GCE_PROJECT }}
  GCE_INSTANCE_BASENAME: ci-gpu-vm
  GCE_INSTANCE_BASE_TYPE: n1-standard
  GCE_INSTANCE_ZONE: us-west1-b
  GCE_IMAGE_FAMILY: ubuntu-1804-lts
  GCE_GPU: count=1,type=nvidia-tesla-t4
  GCE_BOOT_DISK_TYPE: pd-ssd
  NVIDIA_DRIVER_VERSION: 440    # Must be present in Ubuntu repos

jobs:
  clone-build-install-test:
    name: Clone, build, install and run unit tests
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        SHARED: [ON, OFF]
        BUILD_DEPENDENCY_FROM_SOURCE: [ON, OFF]
        BUILD_ML_OPS: [ON, OFF]
        BUILD_CUDA: [ON]

    env:
      SHARED: ${{ matrix.SHARED }}
      BUILD_DEPENDENCY_FROM_SOURCE: ${{ matrix.BUILD_DEPENDENCY_FROM_SOURCE }}
      BUILD_TENSORFLOW_OPS: ${{ matrix.BUILD_ML_OPS }}
      BUILD_PYTORCH_OPS: ${{ matrix.BUILD_ML_OPS }}
      BUILD_CUDA_MODULE: ${{ matrix.BUILD_CUDA }}

    steps:
      - name: GCloud setup
        uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '302.0.0'    # Fixed to avoid dependency on API changes
          service_account_key: ${{ secrets.GCE_SA_KEY_GPU_CI }}
          project_id: ${{ secrets.GCE_PROJECT }}
          export_default_credentials: true

      - name: Create VM
        run: |-
          gcloud info
          export GCE_INSTANCE_TYPE=${GCE_INSTANCE_BASE_TYPE}-$NPROC
          export GCE_INSTANCE=${GCE_INSTANCE_BASENAME}-${GITHUB_SHA::8}\
          -sh${SHARED,,}\
          -dep${BUILD_DEPENDENCY_FROM_SOURCE,,}\
          -mlops${BUILD_TENSORFLOW_OPS,,}
          TRIES=0   # Try creating a VM instance 5 times
          while (( TRIES<5 )) && ! \
          gcloud compute instances create $GCE_INSTANCE \
            --zone=${GCE_INSTANCE_ZONE} \
            --image-project=ubuntu-os-cloud \
            --image-family=$GCE_IMAGE_FAMILY \
            --maintenance-policy=TERMINATE \
            --accelerator=$GCE_GPU \
            --machine-type=$GCE_INSTANCE_TYPE \
            --boot-disk-size=32GB \
            --boot-disk-type=$GCE_BOOT_DISK_TYPE \
            --no-service-account \
            --no-scopes
          do
            sleep 5
            (( TRIES=TRIES+1 ))
          done
          echo "::set-env name=GCE_INSTANCE::$GCE_INSTANCE"
          exit $(( TRIES>=5 ))  # 0 => success

      - name: Clone source code repository
        run: |-
          gcloud compute ssh ${GCE_INSTANCE} --zone ${GCE_INSTANCE_ZONE} -- -C \
            "git clone --recursive ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} && \
            cd Open3D && \
            git checkout ${GITHUB_SHA}"

      - name: Install dependencies
        run: |-
          gcloud compute ssh ${GCE_INSTANCE} --zone ${GCE_INSTANCE_ZONE} -- -C \
          "echo 'Installing backported cmake from https://apt.kitware.com/ and NVIDIA drivers' && \
           wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc \
           2>/dev/null \
           | gpg --dearmor - \
           | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
           sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' && \
           sudo apt-get --yes install cmake python3 python3-pip \
           nvidia-driver-${NVIDIA_DRIVER_VERSION} && \
           echo 'Only for Ubuntu <= 20.04' && set -x && \
           ln -s /usr/bin/python3.6 .local/bin/python && \
           ln -s /usr/bin/python3.6-config .local/bin/python-config && \
           ln -s /usr/bin/pip3 .local/bin/pip && set +x && \
           Open3D/util/scripts/install-deps-ubuntu.sh assume-yes"
           # reboot to load NVIDIA drivers
           gcloud compute ssh ${GCE_INSTANCE} --zone ${GCE_INSTANCE_ZONE} -- -C \
           "sudo reboot" || true
           sleep 10
           TRIES=0
           while (( TRIES<5 )) && ! \
           gcloud compute ssh ${GCE_INSTANCE} --zone ${GCE_INSTANCE_ZONE} -- -C exit
           do
             sleep 5
             (( TRIES=TRIES+1 ))
           done
           exit $(( TRIES>=5 ))  # 0 => success

      - name: Config, build and run unit tests
        run: |-
          gcloud compute ssh ${GCE_INSTANCE} --zone ${GCE_INSTANCE_ZONE} -- -C \
          "export PATH='$HOME/.local/bin:$PATH' \
           SHARED=$SHARED \
           NPROC=$NPROC \
           BUILD_DEPENDENCY_FROM_SOURCE=$BUILD_DEPENDENCY_FROM_SOURCE \
           BUILD_CUDA_MODULE=$BUILD_CUDA_MODULE \
           BUILD_TENSORFLOW_OPS=$BUILD_TENSORFLOW_OPS \
           BUILD_PYTORCH_OPS=$BUILD_PYTORCH_OPS \
           LOW_MEM_USAGE=$LOW_MEM_USAGE && \
           cd Open3D && ./util/scripts/run-ci.sh"

      - name: Delete VM instance
        if: ${{ always() }}
        run: |-
          gcloud compute instances delete ${GCE_INSTANCE} --zone ${GCE_INSTANCE_ZONE}
