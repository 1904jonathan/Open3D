name: MacOS

on:
  workflow_dispatch:
    inputs:
      developer_build:
        description: 'Set to OFF for Release builds.'
        required: false
        default: 'ON'

  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]  # Rebuild on new pushes to PR

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
  NPROC: 3
  DEVELOPER_BUILD: ${{ github.event.inputs.developer_build || 'ON' }}

jobs:
  MacOS:
    runs-on: macos-10.15
    strategy:
      fail-fast: false
    env:
      SHARED: OFF
      BUILD_CUDA_MODULE: OFF
      BUILD_TENSORFLOW_OPS: OFF
      BUILD_PYTORCH_OPS: OFF
      LOW_MEM_USAGE: ON
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Setup cache
        uses: actions/cache@v2
        with:
          # Ref: https://github.com/apache/incubator-mxnet/pull/18459/files
          path: ~/.ccache
          # We include the commit sha in the cache key, as new cache entries are
          # only created if there is no existing entry for the key yet.
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          # Restore any ccache cache entry, if none for
          # ${{ runner.os }}-ccache-${{ github.sha }} exists.
          # Common prefix will be used so that ccache can be used across commits.
          restore-keys: |
            ${{ runner.os }}-ccache
      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          brew install ccache
          ccache -M 2G  # See .github/workflows/readme.md for ccache strategy.
      - name: Config and build
        run: |
          PATH=/usr/local/var/homebrew/linked/ccache/libexec:$PATH
          ccache -s
          ./util/run_ci.sh
          DEVEL_PKG_NAME="$(basename package/open3d-devel-*.tar.xz)"
          echo "DEVEL_PKG_NAME=$DEVEL_PKG_NAME" >> $GITHUB_ENV
      - name: Build Open3D viewer app
        if: ${{ env.SHARED == 'OFF' }}
        run: |
          PATH=/usr/local/var/homebrew/linked/ccache/libexec:$PATH
          pushd build
          make -j${NPROC} Open3DViewer
          pushd bin
          zip -rv open3d-app-macosx-10_15.zip Open3D.app
          ccache -s
