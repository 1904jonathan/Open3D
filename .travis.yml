notifications:
  email: false # turn off email notifications for build failure

matrix:
  include:
    # Default environment of Ubuntu 14.04
    - os: linux
      dist: trusty
      language: python
      python: 3.6
      #compiler: gcc
      sudo: true
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-4.8
            - g++-4.8
            - cmake-data # to use cmake 3.0 or more recent
            - cmake

    # Similar environment of Ubuntu 16.04 (gcc 5.4)
    # travis ci only supports Ubuntu 14.04 (trusty) gcc-5 and 6
    # another option is to use docker.
    - os: linux
      dist: trusty
      language: python
      python: 3.6
      #compiler: gcc
      sudo: true
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - cmake-data # to use cmake 3.0 or more recent
            - cmake

    # Default environment of MacOS El Capitan
    # compiled using clang shipped with xcode8
    - os: osx
      osx_image: xcode8
      language: cpp
      #compiler: clang

    # Default environment of MacOS Sierra
    # compiled using clang shipped with xcode8.3
    - os: osx
      osx_image: xcode8.3
      language: cpp
      #compiler: clang

install:
  # ISSUE: we may want to use '/scripts/install-deps-ubuntu.sh' in the future.
  # At this moment, travis-ci supports up to ubuntu 14.04 and this environment
  # does not recognize sudo apt-get install libglfw3-dev
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-get install -y xorg-dev libglu1-mesa-dev libgl1-mesa-glx libglew-dev libjsoncpp-dev libeigen3-dev;
      ./util/scripts/make-documentation.sh;
    fi
  # scripts/install-deps-osx.sh works well
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew install python;
      sudo python -m ensurepip;
      ./util/scripts/install-deps-osx.sh;
    fi
  # for reference, display cmake and python version
  - cmake --version
  - python -V
  - pip install --upgrade pip numpy

script:
  # Build commands
  - mkdir build
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX=install ../src/
  # make -j brings 'virtual memory exhausted: Cannot allocate memory' message
  # this is presumably due to limited memory space of travis-ci
  - make

after_script:
  - sudo make install
  - cd install/test/bin && ls -ali && ./TestProgramOptions --string Hello 2>&1 && cd ../../..
  - output=`cd install/python/Tutorial/Basic && ls -ali && python file_io.py 2>&1 && cd ../../../..` || echo $output
